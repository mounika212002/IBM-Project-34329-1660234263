{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "IMSYr8939ZgK"
      },
      "outputs": [],
      "source": [
        "#PNT2022TMID37513\n",
        "\n",
        "#Real-Time Communication System Powered by AI for Specially abled"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "kZ4eXXOCgB6i"
      },
      "outputs": [],
      "source": [
        "from keras.preprocessing.image import ImageDataGenerator\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "mYRV3zGggHQg"
      },
      "outputs": [],
      "source": [
        "train_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "Eb0hE5pbjcvx"
      },
      "outputs": [],
      "source": [
        "test_datagen=ImageDataGenerator(rescale=1./255)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ptVJFYNaaqvQ"
      },
      "outputs": [],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tGxN6C4sgHVy"
      },
      "outputs": [],
      "source": [
        "x_test = train_datagen.flow_from_directory('/content/drive/MyDrive/Dataset/test_set',target_size=(64,64),batch_size=300,class_mode='categorical',color_mode=\"grayscale\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7Do3MndNgQBg"
      },
      "outputs": [],
      "source": [
        "x_train = train_datagen.flow_from_directory('/content/drive/MyDrive/Dataset/training_set',target_size=(64,64),batch_size=300,class_mode='categorical',color_mode=\"grayscale\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jQXuDYhAljQs"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XZ6Rchw_gU0C"
      },
      "outputs": [],
      "source": [
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import Convolution2D\n",
        "from keras.layers import MaxPooling2D\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import Flatten"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DsDTOuNCgqR7"
      },
      "outputs": [],
      "source": [
        "model = Sequential()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fn35Flpbgs_1"
      },
      "outputs": [],
      "source": [
        "model.add(Convolution2D(32,(3,3),input_shape=(64,64,1), activation='relu'))\n",
        "#no. of feature detectors, size of feature detector, image size, activation function"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-SeunPxHgvtp"
      },
      "outputs": [],
      "source": [
        "model.add(MaxPooling2D(pool_size=(2,2)))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RDL_LR3lgyqH"
      },
      "outputs": [],
      "source": [
        "model.add(Flatten())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "n0JMkX5-g1Xy"
      },
      "outputs": [],
      "source": [
        "model.add(Dense(units=512, activation = 'relu'))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "H9OqFC3Ng351"
      },
      "outputs": [],
      "source": [
        "model.add(Dense(units=9,  activation = 'softmax'))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NJtl_uRtg7W3"
      },
      "outputs": [],
      "source": [
        "model.compile(loss='categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DufWitWRidRj"
      },
      "outputs": [],
      "source": [
        "len(x_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vy3xJOMDiiCX"
      },
      "outputs": [],
      "source": [
        "len(x_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "HFffA2EIg_eB",
        "outputId": "750741c5-e737-4a4e-910c-5501d6cc30c9"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            "5/5 [==============================] - 1129s 258s/step - loss: 1.9706 - accuracy: 0.3940 - val_loss: 1.2117 - val_accuracy: 0.6031\n",
            "Epoch 2/10\n",
            "5/5 [==============================] - 435s 86s/step - loss: 0.9307 - accuracy: 0.6587 - val_loss: 0.8106 - val_accuracy: 0.7911\n",
            "Epoch 3/10\n",
            "5/5 [==============================] - 416s 84s/step - loss: 0.5994 - accuracy: 0.8260 - val_loss: 0.5643 - val_accuracy: 0.8324\n",
            "Epoch 4/10\n",
            "5/5 [==============================] - 398s 79s/step - loss: 0.4201 - accuracy: 0.8747 - val_loss: 0.4585 - val_accuracy: 0.8760\n",
            "Epoch 5/10\n",
            "5/5 [==============================] - 358s 72s/step - loss: 0.3066 - accuracy: 0.9147 - val_loss: 0.4349 - val_accuracy: 0.8853\n",
            "Epoch 6/10\n",
            "5/5 [==============================] - 329s 66s/step - loss: 0.2582 - accuracy: 0.9267 - val_loss: 0.4264 - val_accuracy: 0.8769\n",
            "Epoch 7/10\n",
            "5/5 [==============================] - 285s 59s/step - loss: 0.2371 - accuracy: 0.9307 - val_loss: 0.3813 - val_accuracy: 0.8987\n",
            "Epoch 8/10\n",
            "5/5 [==============================] - 264s 52s/step - loss: 0.1599 - accuracy: 0.9587 - val_loss: 0.3569 - val_accuracy: 0.9076\n",
            "Epoch 9/10\n",
            "5/5 [==============================] - 218s 43s/step - loss: 0.1677 - accuracy: 0.9553 - val_loss: 0.3544 - val_accuracy: 0.9022\n",
            "Epoch 10/10\n",
            "5/5 [==============================] - 205s 41s/step - loss: 0.1577 - accuracy: 0.9560 - val_loss: 0.3194 - val_accuracy: 0.9280\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fb3bc9d6b10>"
            ]
          },
          "execution_count": 23,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "model.fit(x_train,epochs=10,validation_data=x_test,steps_per_epoch=len(x_train)//10,validation_steps=len(x_test))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "A1zmGAwthJHM"
      },
      "outputs": [],
      "source": [
        "model.save('aslpng1.h5')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "GjUltbpUhmxo"
      },
      "outputs": [],
      "source": [
        "from keras.models import load_model\n",
        "import numpy as np\n",
        "import cv2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "GtpRm-3GhqAQ"
      },
      "outputs": [],
      "source": [
        "model=load_model('aslpng1.h5')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "FTmNCVN4htEM"
      },
      "outputs": [],
      "source": [
        "from skimage.transform import resize\n",
        "def detect(frame):\n",
        "  img = resize(frame,(64,64,1))\n",
        "  img = np.expand_dims(img,axis=0)\n",
        "  if(np.max(img)>1):\n",
        "    img = img/255.0\n",
        "  prediction = model.predict(img)\n",
        "  print(prediction)\n",
        "  prediction = np.argmax(prediction,axis=1)\n",
        "  print(prediction)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "LWO4OIg9hw5v",
        "outputId": "11fb272b-7d6e-4bbc-a128-55a7d4101d39"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "1/1 [==============================] - 0s 139ms/step\n",
            "[[6.0657231e-07 1.5766003e-04 3.6420342e-06 1.9497325e-06 2.3256561e-07\n",
            "  9.9977511e-01 3.6112770e-08 9.6781996e-09 6.0739778e-05]]\n",
            "[5]\n"
          ]
        }
      ],
      "source": [
        "frame=cv2.imread('/content/drive/MyDrive/Dataset/test_set/F/1.png')\n",
        "data = detect(frame)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3.9.7 64-bit",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "vscode": {
      "interpreter": {
        "hash": "61c90538b1ad20ef81b0d1383e676ffee859e383d2e80063201eb4e269f58d8a"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}