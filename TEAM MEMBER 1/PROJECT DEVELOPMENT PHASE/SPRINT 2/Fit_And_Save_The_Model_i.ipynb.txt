{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "#PNT2022TMID37513\n",
        "   #Real-Time Communication System Powered by AI for Specially abled"
      ],
      "metadata": {
        "id": "HE76GSVuPH0V"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator"
      ],
      "metadata": {
        "id": "sLXv_N1pVoP3"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "rSt-PP8pBcNE"
      },
      "outputs": [],
      "source": [
        "# Training Dataset\n",
        "x_train=train_datagen.flow_from_directory('/content/drive/MyDrive/Dataset/test_set',target_size=(64,64), class_mode='categorical',batch_size=900)\n",
        "# Testing Dataset\n",
        "x_test=test_datagen.flow_from_directory('/content/drive/MyDrive/content/Dataset/training_set',target_size=(64,64), class_mode='categorical',batch_size=900)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Training Datagen\n",
        "train_datagen = ImageDataGenerator(rescale=1/255,zoom_range=0.2,horizontal_flip=True,vertical_flip=False)\n",
        "# Testing Datagen\n",
        "test_datagen = ImageDataGenerator(rescale=1/255)\n"
      ],
      "metadata": {
        "id": "q2Trnf22Bibb"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Training Dataset\n",
        "x_train=train_datagen.flow_from_directory('/content/drive/MyDrive/Dataset/test_set',target_size=(64,64), class_mode='categorical',batch_size=900)\n",
        "# Testing Dataset\n",
        "x_test=test_datagen.flow_from_directory('/content/drive/MyDrive/content/Dataset/training_set',target_size=(64,64), class_mode='categorical',batch_size=900)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wsy-LBCzBo-p",
        "outputId": "b5f4bf4f-31c3-4ce1-ac26-03aa9cc0efac"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 2250 images belonging to 9 classes.\n",
            "Found 7134 images belonging to 9 classes.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Len x-train : \", len(x_train))\n",
        "print(\"Len x-test : \", len(x_test))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S3g9ttpsCM2B",
        "outputId": "a956bc57-7d42-47a5-c93a-35a788a819c4"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Len x-train :  0\n",
            "Len x-test :  8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# The Class Indices in Training Dataset\n",
        "x_train.class_indices"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gFEYaMFpCWgG",
        "outputId": "56f6582e-0eb0-4b9a-d84b-696aad8c3613"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7, 'I': 8}"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Model Creation"
      ],
      "metadata": {
        "id": "FuzK-RztPZ6e"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Importing Libraries\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Convolution2D,MaxPooling2D,Flatten,Dense"
      ],
      "metadata": {
        "id": "YwRfPgEACajv"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Creating Model\n",
        "model=Sequential()"
      ],
      "metadata": {
        "id": "mCvCNjhBCeEB"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Adding Layers\n",
        "model.add(Convolution2D(32,(3,3),activation='relu',input_shape=(64,64,3)))"
      ],
      "metadata": {
        "id": "WXnOpesaChJq"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.add(MaxPooling2D(pool_size=(2,2)))"
      ],
      "metadata": {
        "id": "BJn_ThHpMNII"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.add(Flatten())"
      ],
      "metadata": {
        "id": "mkx_tEvEMPm8"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Adding Dense Layers\n",
        "model.add(Dense(300,activation='relu'))\n",
        "model.add(Dense(150,activation='relu'))\n",
        "model.add(Dense(9,activation='softmax'))"
      ],
      "metadata": {
        "id": "SxOIPVQzMdyv"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Compiling the Model\n",
        "model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "tGrsxYogMgv4"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Fitting the Model Generator\n",
        "model.fit(x_train,steps_per_epoch=len(x_train),epochs=10,validation_data=x_test,validation_steps=len(x_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tf4O2KvpMklK",
        "outputId": "e5e20951-f056-49aa-986a-63bc6601417e"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "3/3 [==============================] - 1732s 750s/step - loss: 2.1517 - accuracy: 0.2053 - val_loss: 2.2067 - val_accuracy: 0.2459\n",
            "Epoch 2/10\n",
            "3/3 [==============================] - 74s 30s/step - loss: 1.6464 - accuracy: 0.5156 - val_loss: 1.2489 - val_accuracy: 0.6545\n",
            "Epoch 3/10\n",
            "3/3 [==============================] - 71s 29s/step - loss: 1.0374 - accuracy: 0.6982 - val_loss: 0.7937 - val_accuracy: 0.7485\n",
            "Epoch 4/10\n",
            "3/3 [==============================] - 71s 28s/step - loss: 0.6109 - accuracy: 0.8227 - val_loss: 0.6305 - val_accuracy: 0.7759\n",
            "Epoch 5/10\n",
            "3/3 [==============================] - 55s 21s/step - loss: 0.3774 - accuracy: 0.8889 - val_loss: 0.4589 - val_accuracy: 0.8587\n",
            "Epoch 6/10\n",
            "3/3 [==============================] - 58s 25s/step - loss: 0.2398 - accuracy: 0.9213 - val_loss: 0.3942 - val_accuracy: 0.9120\n",
            "Epoch 7/10\n",
            "3/3 [==============================] - 55s 20s/step - loss: 0.1622 - accuracy: 0.9418 - val_loss: 0.4858 - val_accuracy: 0.8639\n",
            "Epoch 8/10\n",
            "3/3 [==============================] - 70s 28s/step - loss: 0.1036 - accuracy: 0.9680 - val_loss: 0.4278 - val_accuracy: 0.9022\n",
            "Epoch 9/10\n",
            "3/3 [==============================] - 70s 28s/step - loss: 0.0695 - accuracy: 0.9782 - val_loss: 0.6207 - val_accuracy: 0.8419\n",
            "Epoch 10/10\n",
            "3/3 [==============================] - 70s 31s/step - loss: 0.0536 - accuracy: 0.9858 - val_loss: 0.4197 - val_accuracy: 0.9057\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fa7fac9bcd0>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.save('asl_model_84_54.h5')"
      ],
      "metadata": {
        "id": "Y72jLydjPkIw"
      },
      "execution_count": 28,
      "outputs": []
    }
  ]
}